We need to devleo psome kind of structure and logic for determing whta order to devleop dofferent features and tasks. the MVP tenchcoal implemntaon hsoudl be focuysed on statistical analysis and debuggng. IT shoud be gttign the abolutel basics up and runnign such as interactiviet, game objects and UI. How cna we build a scalable logi for ensuring that the feature and task generaiton ordering makes sense and build on foundaitnal elemnts e.g. no fancy VFX or SFX i nthe first feature. Shousl we leverage the context fiels e.g. Code-Quality-Checklist, or sghous lthis guidance be hard coded into every featrie and task generaio nromt oas a warning?


Eevry feature markdown file generated shud lincldue a mermaid chart that outlined in detial the UML architecture of that partocualr furatrie. IT sdoesint need ot incldue hte structire if the nsitr eipci or game, but the diagram shoud  allow m to undersand at a glance the varios uelemts of the class anf ducniotla hieratcy and their relaitonships. 

Our commands are in the .claude/commands folder. But I want a way to keep track of the chanegs made to them. Can we create a commands to copy the glocal commands into the current proejct folder and to allow me to keep the local versiosn up to daye by periodically updateing them when any changes are made to the lgocal verisons? that way. Ican capture the current state in the project git